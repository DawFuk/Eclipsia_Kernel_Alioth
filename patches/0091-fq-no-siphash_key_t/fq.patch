--- a/include/net/fq.h
+++ b/include/net/fq.h
@@ -70,7 +70,15 @@ struct fq {
 	struct list_head backlogs;
 	spinlock_t lock;
 	u32 flows_cnt;
+#if LINUX_VERSION_IS_GEQ(5,3,10) || \
+    LINUX_VERSION_IN_RANGE(4,19,83, 4,20,0) || \
+    LINUX_VERSION_IN_RANGE(4,14,153, 4,15,0) || \
+    LINUX_VERSION_IN_RANGE(4,9,200, 4,10,0) || \
+    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0)
 	siphash_key_t	perturbation;
+#else
+	u32 perturbation;
+#endif
 	u32 limit;
 	u32 memory_limit;
 	u32 memory_usage;
--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@ -118,7 +118,15 @@ static struct fq_flow *fq_flow_classify(
 
 	lockdep_assert_held(&fq->lock);
 
+#if LINUX_VERSION_IS_GEQ(5,3,10) || \
+    LINUX_VERSION_IN_RANGE(4,19,83, 4,20,0) || \
+    LINUX_VERSION_IN_RANGE(4,14,153, 4,15,0) || \
+    LINUX_VERSION_IN_RANGE(4,9,200, 4,10,0) || \
+    LINUX_VERSION_IN_RANGE(4,4,200, 4,5,0)
 	hash = skb_get_hash_perturb(skb, &fq->perturbation);
+#else
+	hash = skb_get_hash_perturb(skb, fq->perturbation);
+#endif
 	idx = reciprocal_scale(hash, fq->flows_cnt);
 	flow = &fq->flows[idx];
 
